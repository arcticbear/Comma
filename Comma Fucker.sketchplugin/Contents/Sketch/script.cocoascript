var layers = function(context) {
    var doc = context.document
    var selectedLayers = context.selection
    var selectedCount = doc.selectedLayersOfClass(MSTextLayer).count()
    if (selectedCount == 0) {
        return [[doc currentPage] layers]
    } else {
        return doc.selectedLayersOfClass(MSTextLayer)
    }
}

var moveLayer = function(layer) {
    [layer adjustFrameToFit]
    layer.setIsVisible(false)
    layer.setIsVisible(true)
}

var stringToTitleCase = function(string){
    var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;

    return string.replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, function(match, index, title) {
        if (index > 0 && index + match.length !== title.length &&
            match.search(smallWords) > -1 && title.charAt(index - 2) !== ':' &&
            (title.charAt(index + match.length) !== '-' || title.charAt(index - 1) === '-') &&
            title.charAt(index - 1).search(/[^\s-]/) < 0) {
            return match.toLowerCase()
        }

        if (match.substr(1).search(/[A-Z]|\../) > -1) {
            return match
        }

        return match.charAt(0).toUpperCase() + match.substr(1)
    })
}

var stringToSentenceCase = function(string) {
    var rg = /(^\s*\w{1}|\.\s*\w{1})/gi
    string = string.replace(rg, function(toReplace) {
        return toReplace.toUpperCase()
    })
    return string
}

var countWords = function(s) {
    s = s.replace(/(^\s*)|(\s*$)/gi,'')
    s = s.replace(/[ ]{2,}/gi,' ')
    s = s.replace(/\n /,'\n')
    return s.split(' ').length
}

var removeDoubleSpaces = function(s) {
    while (s.match('  ')) {
        s = s.replace('  ', ' ')
    }
    return s
}

var onRun = function(context) {
}

var onCharCount = function(context) {
    var doc = context.document
    layers = layers(context)
    var totalCharacters = 0
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        totalCharacters += string.length()
    }
    [doc showMessage:'Characters: ' + totalCharacters]
}

var onWordCount = function(context) {
    var doc = context.document
    layers = layers(context)
    var totalWords = 0
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        totalWords += countWords(string)
    }
    [doc showMessage:'Words: ' + totalWords]
}

var onRemoveDoubleSpaces = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        item.setStringValue(removeDoubleSpaces(string))
        moveLayer(item)
    }
}

/* var onCurlyQuotes = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        if ([[item class] isEqual:[MSTextLayer class]]) {
            var string = [item stringValue]
            string = string.replace(/(^\")/gi, '“');
            string = string.replace(/( \")/gi, ' “');
            string = string.replace(/\"/g, '”');
            item.setStringValue(string)
            moveLayer(item)
        }
    }
} */

var onSingleSpaceAfterPunctuation = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        string = removeDoubleSpaces(string)
        string = string.replace(/(,) |(\.) |(\?) |(!) /g, '$1$2$3$4')
        item.setStringValue(string.replace(/(,|\.|\?|!)/g, '$1 '))
        moveLayer(item)
    }
}

var onEllipsis = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        item.setStringValue(string.replace(/\.\.\./g, '…'))
        moveLayer(item)
    }
}

var onUpperCase = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        [item setStringValue:string.toUpperCase()]
        moveLayer(item)
    }
}

var onLowerCase = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue]
        [item setStringValue:string.toLowerCase()]
        moveLayer(item)
    }
}

var onTitleCase = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue].toLowerCase()
        [item setStringValue:stringToTitleCase(string)]
        moveLayer(item)
    }
}

var onSentenceCase = function(context) {
    layers = layers(context)
    for (var i=0; i < [layers count]; i++) {
        var item = [layers objectAtIndex:i]
        var string = [item stringValue].toLowerCase()
        [item setStringValue:stringToSentenceCase(string)]
        moveLayer(item)
    }
}